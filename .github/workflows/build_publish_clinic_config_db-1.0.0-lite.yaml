name: Build and Publish OpenMRS Clinic Config DB
on:
  push:
    branches:
      - master
    paths:
      - .github/workflows/build_publish_clinic_config_db-1.0.0-lite.yaml
      - demo/db-backups/1.0.0-lite/**
  workflow_dispatch:

env:
  RELEASE_TAG: 1.0.0-lite
jobs:
  mysql5-7:
    name: Build with MySQL5.7
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Docker - Login
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_TOKEN }}
      - name: Unzip Configuration Checksums
        run: cd demo/db-backups/1.0.0-lite/mysql5.7/resources && unzip configuration_checksums.zip
      - name: Docker - Build and push with mysql 5.7
        uses: docker/build-push-action@v3
        with:
          context: .
          file: demo/db-backups/${{env.RELEASE_TAG}}/mysql5.7/Dockerfile
          push: true
          tags: bahmni/openmrs-db:${{env.RELEASE_TAG}}-mysql5.7
  
  mysql5-6:
    name: Build with MySQL5.6
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Docker - Login
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_TOKEN }}
      - name: Unzip Configuration Checksums
        run: cd demo/db-backups/1.0.0-lite/mysql5.6/resources && unzip configuration_checksums.zip
      - name: Docker - Build and push with mysql 5.6
        uses: docker/build-push-action@v3
        with:
          context: .
          file: demo/db-backups/${{env.RELEASE_TAG}}/mysql5.6/Dockerfile
          push: true
          tags: bahmni/openmrs-db:${{env.RELEASE_TAG}}-mysql5.6
  
  trigger-workflow:
    name: Trigger workflow to deploy to docker env
    needs: 
      - mysql5-6
      - mysql5-7
    runs-on: ubuntu-latest
    env:
      ORG_NAME: Bahmni
      REPOSITORY_NAME: bahmni-docker
      EVENT_TYPE: openmrs-db-publish-event
    steps:
      - name: Create repository_dispatch
        run: |
          trigger_result=$(curl -s -o trigger_response.txt -w "%{http_code}" -X POST -H "Accept: application/vnd.github.v3+json" -H 'authorization: Bearer ${{ secrets.BAHMNI_PAT }}' https://api.github.com/repos/${ORG_NAME}/${REPOSITORY_NAME}/dispatches -d '{"event_type":"'"${EVENT_TYPE}"'"}')
          if [ $trigger_result == 204 ];then
            echo "Trigger to $ORG_NAME/$REPOSITORY_NAME Success"
          else
            echo "Trigger to $ORG_NAME/$REPOSITORY_NAME Failed"
            cat trigger_response.txt
            exit 1
          fi